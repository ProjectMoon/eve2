<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:ivy="antlib:org.apache.ivy.ant" name="eve-interpreter" default="jar" basedir=".">
	<description>
***TO BUILD: ant dependencies &amp;&amp; ant jar***

This will build the eve interpreter. Building is divided into two stages:
dependency resolution and actual building. If you do not have dependencies
installed, downloading all of them can take a bit of time. The build process
uses Apache Ivy for dependency resolution.

This project also depends on the javaflow continuations library, which must be
downloaded via SVN. All of this should be handled by the build process. Modify
build.xml if you need more control over this process.

Once dependencies are resolved, building is very quick. An executable eve.jar
will be placed in a dist directory, and all dependencies will be placed in a
lib directory there.
	</description>

	<!-- global properties -->
	<property name="src" location="src" />
	<property name="lib" location="lib" />
	<property name="build-dep" location="build-dep" />
	<property name="antlr-generated" location="antlr-generated" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="res" location="res" />
	<property name="bin" location="bin" /> <!-- generated by eclipse -->
	
	<!-- Build macro for antlr code generation -->
	<macrodef name="antlr3">
		<attribute name="grammar"/>
		<attribute name="output" default="."/>
		<attribute name="lib" default="."/>
		<sequential>
			<java classname="org.antlr.Tool" fork="true" failonerror="true">
				<classpath>
					<fileset dir="lib/" includes="*.jar" />
				</classpath>
				<arg value="-o"/>
				<arg path="@{output}"/>
				<arg value="-verbose"/>
				<arg value="-make"/>
				<arg path="@{grammar}"/>
			</java>
		</sequential>
	</macrodef>

	<!--Dependency resolution: javaflow library and Ivy dependencies -->
	<target name="javaflow" description="--> build javaflow library">
		<mkdir dir="${build-dep}" />
		<get usetimestamp="true" src="http://apache.mirrors.redwire.net/maven/binaries/maven-ant-tasks-2.1.3.jar" dest="${build-dep}" />
		<get usetimestamp="true" src="http://subclipse.tigris.org/files/documents/906/49042/svnant-1.3.1.zip" dest="${build-dep}/svnant.zip" />

		<unzip src="${build-dep}/svnant.zip" dest="${build-dep}/svnant" />

		<!-- download svnant, check out svn repo, and install -->
		<path id="maven-ant-tasks.classpath" path="${build-dep}/maven-ant-tasks-2.1.3.jar" />
		<path id="path.svnant">
			<fileset dir="${build-dep}/svnant/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
			uri="antlib:org.apache.maven.artifact.ant"
			classpathref="maven-ant-tasks.classpath" />

		<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" 
			classpathref="path.svnant" />

		<svnSetting id="settings" svnkit="true" javahl="false" />
		<svn refid="settings">
			<checkout url="http://svn.apache.org/repos/asf/commons/sandbox/javaflow/trunk/" revision="HEAD" destPath="${build-dep}/javaflow" />
		</svn>

		<artifact:mvn pom="${build-dep}/javaflow/pom.xml">
			<arg value="install" />
		</artifact:mvn>
	</target>

	<!-- This will resolve all dependencies (including javaflow) via Ivy -->
	<target name="dependencies" depends="javaflow" description="--> retrieve and build dependencies">
		<mkdir dir="${lib}" />
		<ivy:configure />
		<ivy:retrieve />
	</target>

	<!-- initial build setup -->
	<target name="init" description="--> build setup">
		<tstamp />
		<mkdir dir="${build}" />
	</target>

	<target name="antlr" depends="init" description="--> antlr code generation">
		<mkdir dir="${antlr-generated}" />
		<property name="dest" location="${antlr-generated}/eve/core/"/>
		<property name="grammar" location="${src}/eve/core/Eve.g" />
		<property name="ast" location="${src}/eve/core/ASTParser.g" />

		<!-- Generate code from Eve.g and ASTParser.g -->
		<antlr3 grammar="${grammar}" output="${dest}" />
		<antlr3 grammar="${ast}" output="${dest}" />		
	</target>
	
	<!-- compile code -->
	<target name="compile" depends="antlr" description="--> build eve">
		<mkdir dir="${build}/_" />
		<javac srcdir="${src};${antlr-generated}" listfiles="true" destdir="${build}/_" deprecation="Yes" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
			<classpath>
				<fileset dir="lib/" includes="*.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="enhance" depends="compile" description="--> javaflow enhancement">
		<taskdef name="javaflow" classname="org.apache.commons.javaflow.ant.AntRewriteTask">
			<classpath>
				<fileset dir="lib/" includes="*.jar" />
			</classpath>
		</taskdef>

		<javaflow srcdir="${build}/_" destdir="${build}" mode="bcel">
			<include name="**/*.class" />
			<exclude name="**/EveParser*.class" />
			<exclude name="**/ASTParser*.class" />
		</javaflow>
		
		<copy todir="${build}">
			<fileset dir="${build}/_">
				<include name="eve/core/EveParser*.class" />
				<include name="eve/core/ASTParser*.class" />
			</fileset>
		</copy>
		
		<delete dir="${build}/_" />
	</target>
	
	<!-- build executable jar file -->
	<target name="jar" depends="enhance" description="--> create executable jar">
		<!-- library definitions -->
		<property name="antlr" location="${lib}/antlr-runtime-3.3.jar" />
		<property name="commons-cli" location="${lib}/commons-cli-1.2.jar" />
		
		<!-- copy runtime dependencies to dist/lib -->
		<!--<copy file="${antlr}" todir="${dist}/lib" />
		<copy file="${commons-cli}" todir="${dist}/lib" />-->
			
		<copy todir="${dist}/lib">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
				<exclude name="**/*-sources.jar" />
				<exclude name="**/*-javadoc.jar" />
				<!-- for antlr, we currently only need the 3.3 runtime -->
				<exclude name="**/antlr-3.3.jar" />
				<exclude name="**/antlr-2.*.jar" />
				<exclude name="**/stringtemplate-*.jar" />
			</fileset>
		</copy>

		<manifestclasspath property="manifest_cp" jarfile="${dist}/eve.jar">
			<classpath>
				<fileset dir="${dist}/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
				
		<jar destfile ="${dist}/eve.jar" basedir="${build}" includes="**/*.class">
			<manifest>
				<attribute name="Main-Class" value="eve.core.EveCore" />
				<attribute name="Class-Path" value="${manifest_cp}" />
			</manifest>
			<fileset dir="${res}">
				<include name="logback.xml" />
			</fileset>
		</jar>
		
		<chmod perm="+x" file="${dist}/eve.jar" />
	</target>
	
	<target name="clean" description="--> clean up">
		<delete dir="${dist}" />
		<delete dir="${build}" />
		<delete dir="${antlr-generated}" />
		<delete dir="${bin}" />
	</target>

	<target name="purge" depends="clean" description="--> remove dependency build directory">
		<delete dir="${build-dep}" />
	</target>
</project>
